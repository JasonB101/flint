{"ast":null,"code":"var _jsxFileName = \"/Users/jasonbrown/Documents/Development/ASPnet/flint/client/src/Store.js\";\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from \"axios\";\nconst authAxios = axios.create();\nconst userAxios = axios.create();\nexport const storeContext = createContext({});\nuserAxios.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\n\nconst Store = props => {\n  //change initial value of user to empty object\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('user')) || {});\n  useEffect(() => {//Do yo thang\n  }, [user]);\n\n  const login = credentials => {\n    return authAxios.post(\"/auth/login\", credentials).then(response => {\n      const {\n        user,\n        user: {\n          token\n        }\n      } = response.data;\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      localStorage.setItem(\"token\", token);\n      setUser(user);\n      return response;\n    });\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"token\");\n    setUser({});\n  };\n\n  return /*#__PURE__*/React.createElement(storeContext.Provider, {\n    value: {\n      user\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default Store;","map":{"version":3,"sources":["/Users/jasonbrown/Documents/Development/ASPnet/flint/client/src/Store.js"],"names":["React","createContext","useState","useEffect","axios","authAxios","create","userAxios","storeContext","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","Store","props","user","setUser","JSON","parse","login","credentials","post","then","response","data","setItem","stringify","logout","removeItem","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,EAAlB;AACA,MAAMC,SAAS,GAAGH,KAAK,CAACE,MAAN,EAAlB;AACA,OAAO,MAAME,YAAY,GAAGP,aAAa,CAAC,EAAD,CAAlC;AAEPM,SAAS,CAACE,YAAV,CAAuBC,OAAvB,CAA+BC,GAA/B,CAAoCC,MAAD,IAAY;AAC3C,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAH,EAAAA,MAAM,CAACI,OAAP,CAAeC,aAAf,GAAgC,UAASJ,KAAM,EAA/C;AACA,SAAOD,MAAP;AACH,CAJD;;AAQA,MAAMM,KAAK,GAAIC,KAAD,IAAW;AACrB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAACoB,IAAI,CAACC,KAAL,CAAWT,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,KAA4C,EAA7C,CAAhC;AAGAZ,EAAAA,SAAS,CAAC,MAAM,CACZ;AACH,GAFQ,EAEN,CAACiB,IAAD,CAFM,CAAT;;AAKA,QAAMI,KAAK,GAAIC,WAAD,IAAiB;AAC3B,WAAOpB,SAAS,CAACqB,IAAV,CAAe,aAAf,EAA8BD,WAA9B,EACFE,IADE,CACGC,QAAQ,IAAI;AACd,YAAM;AAAER,QAAAA,IAAF;AAAQA,QAAAA,IAAI,EAAE;AAAEP,UAAAA;AAAF;AAAd,UAA4Be,QAAQ,CAACC,IAA3C;AACAf,MAAAA,YAAY,CAACgB,OAAb,CAAqB,MAArB,EAA6BR,IAAI,CAACS,SAAL,CAAeX,IAAf,CAA7B;AACAN,MAAAA,YAAY,CAACgB,OAAb,CAAqB,OAArB,EAA8BjB,KAA9B;AACAQ,MAAAA,OAAO,CAACD,IAAD,CAAP;AACA,aAAOQ,QAAP;AACH,KAPE,CAAP;AAQH,GATD;;AAWA,QAAMI,MAAM,GAAG,MAAM;AACjBlB,IAAAA,YAAY,CAACmB,UAAb,CAAwB,MAAxB;AACAnB,IAAAA,YAAY,CAACmB,UAAb,CAAwB,OAAxB;AACAZ,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAJD;;AAMA,sBAEI,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAC1BD,MAAAA;AAD0B,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKD,KAAK,CAACe,QAHX,CAFJ;AAQH,CAnCD;;AAqCA,eAAehB,KAAf","sourcesContent":["import React, { createContext, useState, useEffect } from 'react'\nimport axios from \"axios\"\nconst authAxios = axios.create()\nconst userAxios = axios.create()\nexport const storeContext = createContext({});\n\nuserAxios.interceptors.request.use((config) => {\n    const token = localStorage.getItem(\"token\");\n    config.headers.Authorization = `Bearer ${token}`;\n    return config;\n})\n\n\n\nconst Store = (props) => {\n    //change initial value of user to empty object\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('user')) || {})\n    \n\n    useEffect(() => {\n        //Do yo thang\n    }, [user])\n\n\n    const login = (credentials) => {\n        return authAxios.post(\"/auth/login\", credentials)\n            .then(response => {\n                const { user, user: { token } } = response.data;\n                localStorage.setItem(\"user\", JSON.stringify(user))\n                localStorage.setItem(\"token\", token)\n                setUser(user);\n                return response;\n            })\n    }\n\n    const logout = () => {\n        localStorage.removeItem(\"user\");\n        localStorage.removeItem(\"token\");\n        setUser({});\n    }\n\n    return (\n\n        <storeContext.Provider value={{\n            user\n        }} >\n            {props.children}\n        </storeContext.Provider >\n    )\n}\n\nexport default Store\n"]},"metadata":{},"sourceType":"module"}