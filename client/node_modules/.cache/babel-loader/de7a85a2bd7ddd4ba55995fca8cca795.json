{"ast":null,"code":"var _jsxFileName = \"/Users/jasonbrown/Documents/Development/ASPnet/flint/client/src/Store.js\";\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport createTicket from \"./helpers/createTicket\";\nimport getDays from './helpers/getDays';\nconst authAxios = axios.create();\nconst userAxios = axios.create();\nexport const storeContext = createContext({});\nuserAxios.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\n\nconst Store = props => {\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('user')) || {});\n  const [yardFilter, setYardFilter] = useState({\n    yard: \"All Yards\",\n    sortBy: \"recent\",\n    hotList: false,\n    scroll: 0,\n    partSearch: \"\",\n    recommended: true\n  });\n  useEffect(() => {//Do you thang\n  }, [user]);\n\n  const login = credentials => {\n    return authAxios.post(\"/auth/login\", credentials).then(response => {\n      const {\n        user,\n        user: {\n          token\n        }\n      } = response.data;\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      localStorage.setItem(\"token\", token);\n      setUser(user);\n      return response;\n    });\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"token\");\n    setUser({});\n  };\n\n  return /*#__PURE__*/React.createElement(storeContext.Provider, {\n    value: {//context functions\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default Store;","map":{"version":3,"sources":["/Users/jasonbrown/Documents/Development/ASPnet/flint/client/src/Store.js"],"names":["React","createContext","useState","useEffect","axios","createTicket","getDays","authAxios","create","userAxios","storeContext","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","Store","props","user","setUser","JSON","parse","yardFilter","setYardFilter","yard","sortBy","hotList","scroll","partSearch","recommended","login","credentials","post","then","response","data","setItem","stringify","logout","removeItem","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,MAAMC,SAAS,GAAGH,KAAK,CAACI,MAAN,EAAlB;AACA,MAAMC,SAAS,GAAGL,KAAK,CAACI,MAAN,EAAlB;AACA,OAAO,MAAME,YAAY,GAAGT,aAAa,CAAC,EAAD,CAAlC;AAEPQ,SAAS,CAACE,YAAV,CAAuBC,OAAvB,CAA+BC,GAA/B,CAAoCC,MAAD,IAAY;AAC3C,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAH,EAAAA,MAAM,CAACI,OAAP,CAAeC,aAAf,GAAgC,UAASJ,KAAM,EAA/C;AACA,SAAOD,MAAP;AACH,CAJD;;AAQA,MAAMM,KAAK,GAAIC,KAAD,IAAW;AAErB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAACsB,IAAI,CAACC,KAAL,CAAWT,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,KAA4C,EAA7C,CAAhC;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BzB,QAAQ,CAAC;AACzC0B,IAAAA,IAAI,EAAE,WADmC;AAEzCC,IAAAA,MAAM,EAAE,QAFiC;AAGzCC,IAAAA,OAAO,EAAE,KAHgC;AAIzCC,IAAAA,MAAM,EAAE,CAJiC;AAKzCC,IAAAA,UAAU,EAAE,EAL6B;AAMzCC,IAAAA,WAAW,EAAE;AAN4B,GAAD,CAA5C;AASA9B,EAAAA,SAAS,CAAC,MAAM,CACZ;AACH,GAFQ,EAEN,CAACmB,IAAD,CAFM,CAAT;;AAKA,QAAMY,KAAK,GAAIC,WAAD,IAAiB;AAC3B,WAAO5B,SAAS,CAAC6B,IAAV,CAAe,aAAf,EAA8BD,WAA9B,EACFE,IADE,CACGC,QAAQ,IAAI;AACd,YAAM;AAAEhB,QAAAA,IAAF;AAAQA,QAAAA,IAAI,EAAE;AAAEP,UAAAA;AAAF;AAAd,UAA4BuB,QAAQ,CAACC,IAA3C;AACAvB,MAAAA,YAAY,CAACwB,OAAb,CAAqB,MAArB,EAA6BhB,IAAI,CAACiB,SAAL,CAAenB,IAAf,CAA7B;AACAN,MAAAA,YAAY,CAACwB,OAAb,CAAqB,OAArB,EAA8BzB,KAA9B;AACAQ,MAAAA,OAAO,CAACD,IAAD,CAAP;AACA,aAAOgB,QAAP;AACH,KAPE,CAAP;AAQH,GATD;;AAWA,QAAMI,MAAM,GAAG,MAAM;AACjB1B,IAAAA,YAAY,CAAC2B,UAAb,CAAwB,MAAxB;AACA3B,IAAAA,YAAY,CAAC2B,UAAb,CAAwB,OAAxB;AACApB,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAJD;;AAMA,sBAEI,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE,CAC1B;AAD0B,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKF,KAAK,CAACuB,QAHX,CAFJ;AAQH,CA1CD;;AA4CA,eAAexB,KAAf","sourcesContent":["import React, { createContext, useState, useEffect } from 'react'\nimport axios from \"axios\"\nimport createTicket from \"./helpers/createTicket\"\nimport getDays from './helpers/getDays';\nconst authAxios = axios.create()\nconst userAxios = axios.create()\nexport const storeContext = createContext({});\n\nuserAxios.interceptors.request.use((config) => {\n    const token = localStorage.getItem(\"token\");\n    config.headers.Authorization = `Bearer ${token}`;\n    return config;\n})\n\n\n\nconst Store = (props) => {\n    \n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('user')) || {})\n    const [yardFilter, setYardFilter] = useState({\n        yard: \"All Yards\",\n        sortBy: \"recent\",\n        hotList: false,\n        scroll: 0,\n        partSearch: \"\",\n        recommended: true,\n    })\n\n    useEffect(() => {\n        //Do you thang\n    }, [user])\n\n\n    const login = (credentials) => {\n        return authAxios.post(\"/auth/login\", credentials)\n            .then(response => {\n                const { user, user: { token } } = response.data;\n                localStorage.setItem(\"user\", JSON.stringify(user))\n                localStorage.setItem(\"token\", token)\n                setUser(user);\n                return response;\n            })\n    }\n\n    const logout = () => {\n        localStorage.removeItem(\"user\");\n        localStorage.removeItem(\"token\");\n        setUser({});\n    }\n\n    return (\n\n        <storeContext.Provider value={{\n            //context functions\n        }} >\n            {props.children}\n        </storeContext.Provider >\n    )\n}\n\nexport default Store\n"]},"metadata":{},"sourceType":"module"}