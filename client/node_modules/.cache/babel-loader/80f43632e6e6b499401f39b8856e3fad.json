{"ast":null,"code":"var _jsxFileName = \"/Users/jasonbrown/Documents/Development/Node/flint/client/src/components/Views/Inventory/Toolbar/Toolbar.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport Styles from \"./Toolbar.module.scss\";\n\nconst Toolbar = props => {\n  const [searchKeyword, changeSearchKeyword] = useState(\"\");\n  const {\n    toggleModal,\n    items,\n    filterItems\n  } = props;\n  useEffect(() => {\n    if (searchKeyword === \"\") {\n      filterItems(items);\n    } else {\n      filterItems(items.filter(x => {\n        const {\n          item,\n          partNo,\n          sku\n        } = x;\n        const conditionsArray = [item, partNo, sku];\n        return conditionsArray.some(j => j.toLowerCase().includes(searchKeyword.toLowerCase()));\n      }));\n    }\n  }, [searchKeyword]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: Styles.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => changeSearchKeyword(e.target.value),\n    type: \"text\",\n    value: searchKeyword,\n    placeholder: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => toggleModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, \" Insert New Item\"));\n};\n\nexport default Toolbar;","map":{"version":3,"sources":["/Users/jasonbrown/Documents/Development/Node/flint/client/src/components/Views/Inventory/Toolbar/Toolbar.js"],"names":["React","useState","useEffect","Button","Styles","Toolbar","props","searchKeyword","changeSearchKeyword","toggleModal","items","filterItems","filter","x","item","partNo","sku","conditionsArray","some","j","toLowerCase","includes","wrapper","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACvB,QAAM,CAACC,aAAD,EAAgBC,mBAAhB,IAAuCP,QAAQ,CAAC,EAAD,CAArD;AACA,QAAM;AAAEQ,IAAAA,WAAF;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA;AAAtB,MAAsCL,KAA5C;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,aAAa,KAAK,EAAtB,EAA0B;AACtBI,MAAAA,WAAW,CAACD,KAAD,CAAX;AACH,KAFD,MAEO;AACHC,MAAAA,WAAW,CAACD,KAAK,CAACE,MAAN,CAAaC,CAAC,IAAI;AAC1B,cAAM;AAAEC,UAAAA,IAAF;AAAQC,UAAAA,MAAR;AAAgBC,UAAAA;AAAhB,YAAwBH,CAA9B;AACA,cAAMI,eAAe,GAAG,CAACH,IAAD,EAAOC,MAAP,EAAeC,GAAf,CAAxB;AACA,eAAOC,eAAe,CAACC,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACC,WAAF,GAAgBC,QAAhB,CAAyBd,aAAa,CAACa,WAAd,EAAzB,CAA1B,CAAP;AACH,OAJW,CAAD,CAAX;AAKH;AACJ,GAVQ,EAUN,CAACb,aAAD,CAVM,CAAT;AAYA,sBACI;AAAK,IAAA,SAAS,EAAEH,MAAM,CAACkB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,QAAQ,EAAGC,CAAD,IAAOf,mBAAmB,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAA3C;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,KAAK,EAAElB,aAFX;AAGI,IAAA,WAAW,EAAEO,IAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAKI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAMI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAML,WAAW,CAAC,IAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANJ,CADJ;AAUH,CA1BD;;AA4BA,eAAeJ,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button } from \"react-bootstrap\"\nimport Styles from \"./Toolbar.module.scss\";\n\nconst Toolbar = (props) => {\n    const [searchKeyword, changeSearchKeyword] = useState(\"\")\n    const { toggleModal, items, filterItems } = props;\n\n    useEffect(() => {\n        if (searchKeyword === \"\") {\n            filterItems(items)\n        } else {\n            filterItems(items.filter(x => {\n                const { item, partNo, sku } = x;\n                const conditionsArray = [item, partNo, sku];\n                return conditionsArray.some(j => j.toLowerCase().includes(searchKeyword.toLowerCase()));\n            }))\n        }\n    }, [searchKeyword]);\n\n    return (\n        <div className={Styles.wrapper}>\n            <input onChange={(e) => changeSearchKeyword(e.target.value)}\n                type=\"text\"\n                value={searchKeyword}\n                placeholder={item } />\n            <div className=\"spacer\"></div>\n            <Button onClick={() => toggleModal(true)}> Insert New Item</Button>\n        </div>\n    );\n}\n\nexport default Toolbar;"]},"metadata":{},"sourceType":"module"}